// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrackingProject.DataAccessLayer.Concrete;

#nullable disable

namespace TrackingProject.DataAccessLayer.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TrackingProject.EntityLayer.Concrete.Announcement", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("AnnouncementTypeTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Title")
                        .HasColumnType("longtext");

                    b.Property<int>("TypeID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("AnnouncementTypeTypeID");

                    b.ToTable("Announcements");
                });

            modelBuilder.Entity("TrackingProject.EntityLayer.Concrete.AnnouncementType", b =>
                {
                    b.Property<int>("TypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("TypeID");

                    b.ToTable("AnnouncementTypes");
                });

            modelBuilder.Entity("TrackingProject.EntityLayer.Concrete.Department", b =>
                {
                    b.Property<int>("DepartmentID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.HasKey("DepartmentID");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("TrackingProject.EntityLayer.Concrete.ScheduleType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("longtext");

                    b.HasKey("ID");

                    b.ToTable("ScheduleTypes");
                });

            modelBuilder.Entity("TrackingProject.EntityLayer.Concrete.ScheduleUser", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasColumnType("longtext");

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("ScheduleType")
                        .HasColumnType("int");

                    b.Property<int>("SchuduleTypeID")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SchuduleTypeID");

                    b.ToTable("ScheduleUsers");
                });

            modelBuilder.Entity("TrackingProject.EntityLayer.Concrete.Announcement", b =>
                {
                    b.HasOne("TrackingProject.EntityLayer.Concrete.AnnouncementType", "AnnouncementType")
                        .WithMany("Announcements")
                        .HasForeignKey("AnnouncementTypeTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AnnouncementType");
                });

            modelBuilder.Entity("TrackingProject.EntityLayer.Concrete.ScheduleUser", b =>
                {
                    b.HasOne("TrackingProject.EntityLayer.Concrete.ScheduleType", "SchuduleType")
                        .WithMany("ScheduleUsers")
                        .HasForeignKey("SchuduleTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SchuduleType");
                });

            modelBuilder.Entity("TrackingProject.EntityLayer.Concrete.AnnouncementType", b =>
                {
                    b.Navigation("Announcements");
                });

            modelBuilder.Entity("TrackingProject.EntityLayer.Concrete.ScheduleType", b =>
                {
                    b.Navigation("ScheduleUsers");
                });
#pragma warning restore 612, 618
        }
    }
}
